@page "/stashtabs"
@using MediatR
@inject IMediator Mediator

<div class="mat-elevation-z5 stash-tabs__get-form-wrapper">
    <h3>Enter the info below to get a list of your stash tabs</h3>

    <EditForm Model="@_getStashRequest" OnValidSubmit="GetStashes">
        <DataAnnotationsValidator/>

        <p>
            <MatTextField Label="Account Name" @bind-Value="_getStashRequest.AccountName"></MatTextField>
            <ValidationMessage For="@(() => _getStashRequest.AccountName)"/>
        </p>

        <p>
            <MatTextField Label="PoE Session ID" @bind-Value="_getStashRequest.PoeSessionId"></MatTextField>
            <ValidationMessage For="@(() => _getStashRequest.PoeSessionId)"/>
        </p>

        @if (LoadingStashes)
        {
            <MatButton Type="submit" Raised="true" Disabled="true">
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                Getting Stashes...
            </MatButton>
        }
        else
        {
            <MatButton Type="submit" Raised="true">Get Stashes</MatButton>
        }
    </EditForm>
</div>

@if (StashTabsResponse != null)
{
    <div class="mat-elevation-z5 stash-tabs__tab-form-wrapper">
        <EditForm Model="@_getStashTabItemsRequest" OnValidSubmit="GetStashItems">
            <DataAnnotationsValidator/>

            <p>
                <MatSelect Label="Select A Stash Tab..." @bind-Value="_getStashTabItemsRequest.TabIndex">
                    <MatOptionString></MatOptionString>
                    @foreach (var tab in StashTabsResponse.Tabs)
                    {
                        <MatOptionString Value="@tab.Index.ToString()">@tab.Name</MatOptionString>
                    }
                    /**/
                </MatSelect>
            </p>
            <MatButton Type="submit" Raised="true" Disabled="@string.IsNullOrEmpty(_getStashTabItemsRequest.TabIndex)">Get Stash Items</MatButton>
        </EditForm>
    </div>
}

@if (StashTabItemsResponse != null)
{
    <MatList>
        @foreach (var item in StashTabItemsResponse.Items)
        {
            <MatListItem>@item.Name</MatListItem>
        }
    </MatList>
}

@code {
    private bool LoadingStashes { get; set; }

    private GetStashTabs.Response StashTabsResponse { get; set; }

    private GetStashTabItems.Response StashTabItemsResponse { get; set; }

    private readonly GetStashTabs.Request _getStashRequest = new GetStashTabs.Request();

    private readonly GetStashTabItems.Request _getStashTabItemsRequest = new GetStashTabItems.Request();

    string tabIndex;

    async void GetStashes()
    {
        LoadingStashes = true;

        try
        {
            StashTabsResponse = await Mediator.Send(_getStashRequest);
        }
        catch
        {
            LoadingStashes = false;
        }

        LoadingStashes = false;
        StateHasChanged();
    }

    async void GetStashItems()
    {
        try
        {
            _getStashTabItemsRequest.AccountName = _getStashRequest.AccountName;
            _getStashTabItemsRequest.PoeSessionId = _getStashRequest.PoeSessionId;
            StashTabItemsResponse = await Mediator.Send(_getStashTabItemsRequest);
        }
        catch
        {
        }
        StateHasChanged();
    }

}